{
 "Resources": {
  "MerkleTreeBucketD5F20095": {
   "Type": "AWS::S3::Bucket",
   "UpdateReplacePolicy": "Retain",
   "DeletionPolicy": "Retain",
   "Metadata": {
    "aws:cdk:path": "MerkleTreeStack/MerkleTreeBucket/Resource"
   }
  },
  "apiC8550315": {
   "Type": "AWS::ApiGateway::RestApi",
   "Properties": {
    "Name": "api"
   },
   "Metadata": {
    "aws:cdk:path": "MerkleTreeStack/api/Resource"
   }
  },
  "apiDeployment149F129432a1a6376bc465f3490163e46db0db93": {
   "Type": "AWS::ApiGateway::Deployment",
   "Properties": {
    "Description": "Automatically created by the RestApi construct",
    "RestApiId": {
     "Ref": "apiC8550315"
    }
   },
   "DependsOn": [
    "apimerkletreeGET5C668B00",
    "apimerkletree59F350AB"
   ],
   "Metadata": {
    "aws:cdk:path": "MerkleTreeStack/api/Deployment/Resource"
   }
  },
  "apiDeploymentStageprod896C8101": {
   "Type": "AWS::ApiGateway::Stage",
   "Properties": {
    "DeploymentId": {
     "Ref": "apiDeployment149F129432a1a6376bc465f3490163e46db0db93"
    },
    "RestApiId": {
     "Ref": "apiC8550315"
    },
    "StageName": "prod"
   },
   "Metadata": {
    "aws:cdk:path": "MerkleTreeStack/api/DeploymentStage.prod/Resource"
   }
  },
  "apimerkletree59F350AB": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Fn::GetAtt": [
      "apiC8550315",
      "RootResourceId"
     ]
    },
    "PathPart": "merkle-tree",
    "RestApiId": {
     "Ref": "apiC8550315"
    }
   },
   "Metadata": {
    "aws:cdk:path": "MerkleTreeStack/api/Default/merkle-tree/Resource"
   }
  },
  "apimerkletreeGETApiPermissionMerkleTreeStackapi1243F9A7GETmerkletree4D14FF03": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "readMerkleTree976F8FC8",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "apiC8550315"
       },
       "/",
       {
        "Ref": "apiDeploymentStageprod896C8101"
       },
       "/GET/merkle-tree"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "MerkleTreeStack/api/Default/merkle-tree/GET/ApiPermission.MerkleTreeStackapi1243F9A7.GET..merkle-tree"
   }
  },
  "apimerkletreeGETApiPermissionTestMerkleTreeStackapi1243F9A7GETmerkletree10AC7782": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "readMerkleTree976F8FC8",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "apiC8550315"
       },
       "/test-invoke-stage/GET/merkle-tree"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "MerkleTreeStack/api/Default/merkle-tree/GET/ApiPermission.Test.MerkleTreeStackapi1243F9A7.GET..merkle-tree"
   }
  },
  "apimerkletreeGET5C668B00": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "AuthorizationType": "NONE",
    "HttpMethod": "GET",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":apigateway:",
        {
         "Ref": "AWS::Region"
        },
        ":lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "readMerkleTree976F8FC8",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    },
    "ResourceId": {
     "Ref": "apimerkletree59F350AB"
    },
    "RestApiId": {
     "Ref": "apiC8550315"
    }
   },
   "Metadata": {
    "aws:cdk:path": "MerkleTreeStack/api/Default/merkle-tree/GET/Resource"
   }
  },
  "readMerkleTreeServiceRoleCC59E8B0": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "MerkleTreeStack/readMerkleTree/ServiceRole/Resource"
   }
  },
  "readMerkleTreeServiceRoleDefaultPolicyB154C26E": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "s3:GetBucket*",
        "s3:GetObject*",
        "s3:List*"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "MerkleTreeBucketD5F20095",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "MerkleTreeBucketD5F20095",
             "Arn"
            ]
           },
           "/*"
          ]
         ]
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "readMerkleTreeServiceRoleDefaultPolicyB154C26E",
    "Roles": [
     {
      "Ref": "readMerkleTreeServiceRoleCC59E8B0"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "MerkleTreeStack/readMerkleTree/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "readMerkleTree976F8FC8": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "a8e1cf713928c44d55fa134e5e601d69a12f4258fd23dcb985b0b0618290fb4f.zip"
    },
    "Environment": {
     "Variables": {
      "MERKLE_TREE_BUCKET": {
       "Ref": "MerkleTreeBucketD5F20095"
      },
      "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
     }
    },
    "FunctionName": "MerkleTreeStack-readMerkleTree",
    "Handler": "index.handler",
    "MemorySize": 10240,
    "Role": {
     "Fn::GetAtt": [
      "readMerkleTreeServiceRoleCC59E8B0",
      "Arn"
     ]
    },
    "Runtime": "nodejs18.x"
   },
   "DependsOn": [
    "readMerkleTreeServiceRoleDefaultPolicyB154C26E",
    "readMerkleTreeServiceRoleCC59E8B0"
   ],
   "Metadata": {
    "aws:cdk:path": "MerkleTreeStack/readMerkleTree/Resource",
    "aws:asset:path": "asset.a8e1cf713928c44d55fa134e5e601d69a12f4258fd23dcb985b0b0618290fb4f",
    "aws:asset:is-bundled": true,
    "aws:asset:property": "Code"
   }
  },
  "writeMerkleTreeServiceRole619A72BF": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "MerkleTreeStack/writeMerkleTree/ServiceRole/Resource"
   }
  },
  "writeMerkleTreeServiceRoleDefaultPolicyF328E957": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "s3:Abort*",
        "s3:DeleteObject*",
        "s3:PutObject",
        "s3:PutObjectLegalHold",
        "s3:PutObjectRetention",
        "s3:PutObjectTagging",
        "s3:PutObjectVersionTagging"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "MerkleTreeBucketD5F20095",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "MerkleTreeBucketD5F20095",
             "Arn"
            ]
           },
           "/*"
          ]
         ]
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "writeMerkleTreeServiceRoleDefaultPolicyF328E957",
    "Roles": [
     {
      "Ref": "writeMerkleTreeServiceRole619A72BF"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "MerkleTreeStack/writeMerkleTree/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "writeMerkleTree4293DF1F": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "63784c94dccdfc6239b09c6ab957b152347e7f6821f697dc94332218ab792712.zip"
    },
    "Environment": {
     "Variables": {
      "MERKLE_TREE_BUCKET": {
       "Ref": "MerkleTreeBucketD5F20095"
      },
      "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
     }
    },
    "FunctionName": "MerkleTreeStack-writeMerkleTree",
    "Handler": "index.handler",
    "Role": {
     "Fn::GetAtt": [
      "writeMerkleTreeServiceRole619A72BF",
      "Arn"
     ]
    },
    "Runtime": "nodejs18.x"
   },
   "DependsOn": [
    "writeMerkleTreeServiceRoleDefaultPolicyF328E957",
    "writeMerkleTreeServiceRole619A72BF"
   ],
   "Metadata": {
    "aws:cdk:path": "MerkleTreeStack/writeMerkleTree/Resource",
    "aws:asset:path": "asset.63784c94dccdfc6239b09c6ab957b152347e7f6821f697dc94332218ab792712",
    "aws:asset:is-bundled": true,
    "aws:asset:property": "Code"
   }
  },
  "CDKMetadata": {
   "Type": "AWS::CDK::Metadata",
   "Properties": {
    "Analytics": "v2:deflate64:H4sIAAAAAAAA/1WPS27DMAxEz5K9wsb1ptskRXdpg/QAhiKzLv2RDFNqYBi+e0Ur7gcQMI9Diho9QpblsNvoG29N2WxbusL07rVpVLSKiXOYDsE06NXxw94pyUEzzkr3VGmPNz3CdEH2+55kcsVn7Fs3dmiX+3+q+EaF4iWI8y4MBmXpT3FflPiE/tOVYiWaVau7a6lhitYZh46YyVkZeAnW+MjrSGFdiTXD6yJrV5HuYmbXpndEz64lM0qZaFacF5oZPcNeZJbeW/B98L8pl458g2z1L3Lko7MlpSwSAmp++MqeIJ7dpmai7RCspw7hkvQb3Npm85ABAAA="
   },
   "Metadata": {
    "aws:cdk:path": "MerkleTreeStack/CDKMetadata/Default"
   },
   "Condition": "CDKMetadataAvailable"
  }
 },
 "Outputs": {
  "apiEndpoint9349E63C": {
   "Value": {
    "Fn::Join": [
     "",
     [
      "https://",
      {
       "Ref": "apiC8550315"
      },
      ".execute-api.",
      {
       "Ref": "AWS::Region"
      },
      ".",
      {
       "Ref": "AWS::URLSuffix"
      },
      "/",
      {
       "Ref": "apiDeploymentStageprod896C8101"
      },
      "/"
     ]
    ]
   }
  }
 },
 "Conditions": {
  "CDKMetadataAvailable": {
   "Fn::Or": [
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "af-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-northeast-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-northeast-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ca-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "cn-north-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "cn-northwest-1"
       ]
      }
     ]
    },
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-north-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-3"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "il-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "me-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "me-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "sa-east-1"
       ]
      }
     ]
    },
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-east-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-west-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-west-2"
       ]
      }
     ]
    }
   ]
  }
 },
 "Parameters": {
  "BootstrapVersion": {
   "Type": "AWS::SSM::Parameter::Value<String>",
   "Default": "/cdk-bootstrap/hnb659fds/version",
   "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]"
  }
 },
 "Rules": {
  "CheckBootstrapVersion": {
   "Assertions": [
    {
     "Assert": {
      "Fn::Not": [
       {
        "Fn::Contains": [
         [
          "1",
          "2",
          "3",
          "4",
          "5"
         ],
         {
          "Ref": "BootstrapVersion"
         }
        ]
       }
      ]
     },
     "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
    }
   ]
  }
 }
}